#include<stdio.h>
#include<stdlib.h>
#define SIZE 5

 int queue[SIZE];
 int front=-1,rear=-1;

 int isFull();
 int isEmpty();
 void enqueue(int value);
 int dequeue();
 void display();

 int isFull()
 {
    return(rear==SIZE-1);
 }
 int isEmpty()
 {
    return(front==-1 || front>rear);
 }
 void enqueue(int value)
 {
   if(isFull())
   {
     printf("Queue overflow\n");
     return;
   }
   if(front==-1)
   front=0;
   rear++;
   queue[rear]=value;
 }
 int dequeue()
 {
   if(isEmpty())
   {
     printf("Queue Underflow\n");
     exit(0);
   }
   int dequeuedvalue=queue[front];
   front++;
   return dequeuedvalue;
 }
 void display()
 {
   if(isEmpty())
   {
     printf("Queue is Empty\n");
     return;
   }
   printf("Queue Elements are: \n");
   for(int i=front;i<=rear;i++)
   {
      printf("%d\n",queue[i]);
   }
 }
 int main()
 {
   int choice,value;
   while(1)
   {
     printf("\n Queue Operations\n");
     printf("1.Enqueue\n 2.Dequeue\n 3.Display\n 4.Exit\n");
     printf("Enter your choice: ");
     scanf("%d",&choice);

     switch(choice)
     {
       case 1:
              printf("Enter the value to enqueue: ");
              scanf("%d",&value);
              enqueue(value);
              break;
       case 2:
              if(!isEmpty())
              {
                printf("Dequeued value:%d\n",dequeue());
              }
              else
              {
                printf("Queue is Empty\n");
              }
              break;
        case 3:
               display();
               break;
         case 4:
                printf("Exiting........\n");
                exit(0);
          default:
                  printf("Invalid Choice,Please enter valid choice\n");

     }

   }
   return 0;
}

